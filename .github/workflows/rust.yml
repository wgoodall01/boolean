name: Rust CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run tests
        run: cargo test -p boolean -p cli --verbose

  check_clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -p boolean -p cli --all-features

  build_cli_linux:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - run: cargo build --package cli --release --target x86_64-unknown-linux-gnu
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: boolean_x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/boolean

  build_cli_windows:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - run: cargo install cross
      - run: cross build --package cli --release --target x86_64-pc-windows-gnu
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: boolean_x86_64-pc-windows-gnu
          path: target/x86_64-pc-windows-gnu/release/boolean.exe

  deploy_web:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1

      - name: Cache $CARGO_HOME/bin
        id: cache_cargo_bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin

      - name: Setup cargo-web
        run: cargo web --version || cargo install cargo-web

      - name: Cache ./www/target
        uses: actions/cache@v1
        with:
          path: www/target
          key: ${{ runner.os }}-cargo-build-www-target-${{ hashFiles('**/Cargo.lock') }}

      - working-directory: www
        run: make web

      - uses: actions/upload-artifact@v1.0.0
        with:
          name: boolean_web
          path: www/out

      - working-directory: www
        run: make deploy-production
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
